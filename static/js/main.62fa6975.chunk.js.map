{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","currentPageMinus","currentPagePlus","isFirstPage","isLastPage","_jsxs","className","children","_jsx","cn","disabled","Link","onClick","concat","map","item","index","isActive","active","items","perPageOptions","App","searchParams","setSearchParams","useSearchParams","currentPageFromUrl","Number","get","perPageFromUrl","setCurrentPage","useState","setPerPage","startIndex","endIndex","filteredItems","slice","itemsLength","length","pagesNum","Math","ceil","defaultValue","onChange","e","newPerPage","target","value","page","String","id","option","htmlFor","params","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.62fa6975.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const currentPageMinus = currentPage === 1 ? currentPage : currentPage - 1;\n  const currentPagePlus = currentPage === total ? currentPage : currentPage + 1;\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === total;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage })}>\n        <Link\n          onClick={() => onPageChange(currentPage - 1)}\n          to={`?page=${currentPageMinus}&perPage=${perPage}`}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={isFirstPage}\n        >\n          «\n        </Link>\n      </li>\n      {getNumbers(1, total).map((item, index) => {\n        const isActive = currentPage === index + 1;\n\n        return (\n          <li\n            className={cn('page-item', {\n              active: isActive,\n            })}\n            key={item}\n          >\n            <Link\n              onClick={() => onPageChange(item)}\n              to={`?page=${item}&perPage=${perPage}`}\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n            >\n              {item}\n            </Link>\n          </li>\n        );\n      })}\n      <li\n        className={cn('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <Link\n          onClick={() => onPageChange(currentPage + 1)}\n          to={`?page=${currentPagePlus}&perPage=${perPage}`}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={isLastPage}\n        >\n          »\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst perPageOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentPageFromUrl = Number(searchParams.get('page')) || 1;\n  const perPageFromUrl = Number(searchParams.get('perPage')) || 5;\n\n  const [currentPage, setCurrentPage] = useState(currentPageFromUrl);\n  const [perPage, setPerPage] = useState(perPageFromUrl);\n\n  const startIndex = currentPage === 1 ? 0 : currentPage * perPage - perPage;\n  const endIndex = currentPage * perPage;\n  const filteredItems = items.slice(startIndex, endIndex);\n  const itemsLength = items.length;\n  const pagesNum = Math.ceil(itemsLength / perPage);\n\n  const handleItemsPerPage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = Number(e.target.value);\n\n    setPerPage(newPerPage);\n\n    setCurrentPage(1);\n\n    setSearchParams({ page: '1', perPage: String(newPerPage) });\n  };\n\n  const onPageChange = (page: number) => {\n    if (page < 1 || page > pagesNum) {\n      return;\n    }\n\n    setCurrentPage(page);\n\n    setSearchParams(params => ({ ...params, page: String(page) }));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex > itemsLength ? itemsLength : endIndex} of ${itemsLength})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            defaultValue={perPage}\n            onChange={handleItemsPerPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            {perPageOptions.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={pagesNum}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {filteredItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}