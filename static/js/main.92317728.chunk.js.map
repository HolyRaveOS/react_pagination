{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","currentPageMinus","currentPagePlus","isFirstPage","isLastPage","_jsx","_Fragment","children","_jsxs","className","concat","Link","onClick","map","item","index","isActive","items","App","searchParams","setSearchParams","useSearchParams","currentPageFromUrl","Number","get","perPageFromUrl","setCurrentPage","useState","setPerPage","startIndex","endIndex","filteredItems","slice","itemsLength","length","pagesNum","Math","ceil","defaultValue","onChange","e","newPerPage","target","value","page","String","id","option","htmlFor","Routes","Route","path","element","params","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.92317728.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const currentPageMinus = currentPage === 1 ? currentPage : currentPage - 1;\n  const currentPagePlus = currentPage === total ? currentPage : currentPage + 1;\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === total;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${isFirstPage && 'disabled'}`}>\n          <Link\n            onClick={() => onPageChange(currentPage - 1)}\n            to={`?page=${currentPageMinus}&perPage=${perPage}`}\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            aria-disabled={isFirstPage ? 'true' : 'false'}\n          >\n            «\n          </Link>\n        </li>\n        {getNumbers(1, total).map((item, index) => {\n          const isActive = currentPage === index + 1;\n\n          return (\n            <li className={`page-item ${isActive && 'active'}`} key={item}>\n              <Link\n                onClick={() => onPageChange(item)}\n                to={`?page=${item}&perPage=${perPage}`}\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n              >\n                {item}\n              </Link>\n            </li>\n          );\n        })}\n        <li className={`page-item ${isLastPage && 'disabled'}`}>\n          <Link\n            onClick={() => onPageChange(currentPage + 1)}\n            to={`?page=${currentPagePlus}&perPage=${perPage}`}\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            aria-disabled={isLastPage ? 'true' : 'false'}\n          >\n            »\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Routes, Route, useSearchParams } from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentPageFromUrl = Number(searchParams.get('page')) || 1;\n  const perPageFromUrl = Number(searchParams.get('perPage')) || 5;\n\n  const [currentPage, setCurrentPage] = useState(currentPageFromUrl);\n  const [perPage, setPerPage] = useState(perPageFromUrl);\n\n  const perPageOptions = [3, 5, 10, 20];\n  const startIndex = currentPage === 1 ? 0 : currentPage * perPage - perPage;\n  const endIndex = currentPage * perPage;\n  const filteredItems = items.slice(startIndex, endIndex);\n  const itemsLength = items.length;\n  const pagesNum = Math.ceil(itemsLength / perPage);\n\n  const handleItemsPerPage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = Number(e.target.value);\n\n    setPerPage(newPerPage);\n\n    setCurrentPage(1);\n\n    setSearchParams({ page: '1', perPage: String(newPerPage) });\n  };\n\n  const onPageChange = (page: number) => {\n    if (page < 1 || page > pagesNum) {\n      return;\n    }\n\n    setCurrentPage(page);\n\n    setSearchParams(params => ({ ...params, page: String(page) }));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex > itemsLength ? itemsLength : endIndex} of ${itemsLength})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            defaultValue={perPage}\n            onChange={handleItemsPerPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            {perPageOptions.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Routes>\n        <Route\n          path=\"/react_pagination/\"\n          element={\n            <Pagination\n              total={pagesNum}\n              perPage={perPage}\n              currentPage={currentPage}\n              onPageChange={onPageChange}\n            />\n          }\n        />\n      </Routes>\n      <ul>\n        {filteredItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}